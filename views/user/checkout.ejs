<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>
        <%= title %>
    </title>
    <link rel="stylesheet" href="/user/home/checkout.css">
    <link rel="stylesheet" href="/user/home/header.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.1/css/all.min.css"
        integrity="sha512-5Hs3dF2AEPkpNAR7UiOHba+lRSJNeM2ECkwxUIxC1Q/FLycGTbNapWXB4tP889k5T5Ju8fs4b1P5z/iB4nMfSQ=="
        crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">

    <link href="https://cdn.jsdelivr.net/npm/boxicons@2.1.4/css/boxicons.min.css" rel="stylesheet">

</head>

<body>


    <div class="container-fluid p-0">
        <div class="row">
            <div class="col-md-12">

                <header>

                    <section id="header">

                        <!-- Website Logo  -->

                        <a href="#"><img src="user/home/logo.webp" class="Logo" alt=""></a>

                        <!-- Navbar Pages -->

                        <div>
                            <ul id="navbar">
                                <% if (user) { %>

                                    <li><a href="/">Home</a></li>
                                    <li><a href="/shop">Shop</a></li>
                                    <li><a href="/blog">Blog</a></li>
                                    <li><a href="/about">About</a></li>
                                    <li><a href="/contact">Contact</a></li>

                                    <% } else { %>

                                        <li><a class="active" href="/">Home</a></li>

                                        <li><a href="/blog">Blog</a></li>
                                        <li><a href="/about">About</a></li>
                                        <li><a href="/contact">Contact</a></li>

                                        <% } %>

                            </ul>
                        </div>

                        <!-- Nav bar Icons -->

                        <div id="icons">
                            <% if (user) { %>
                                <a href="/profile"><i class="fa-solid fa-user"></i></a>
                                <a href="/cart"><i class="fa-solid fa-bag-shopping"></i></a>
                                <!-- <a href="/wishlist"><i class="fa-solid fa-heart"></i></a> -->
                                <% if (wishlist_length && wishlist_length> 0) { %>

                                    <a href="/wishlist" class="wishlist-container">
                                        <i class="fa-solid fa-heart"></i>
                                        <span class="wishlist-badge">
                                            <%= wishlist_length %>
                                        </span>
                                    </a>

                                    <% } else { %>
                                        <a href="/wishlist"><i class="fa-solid fa-heart"></i></a>

                                        <% } %>
                                            <% } else { %>
                                                <a href="/login">Login</a>
                                                <% } %>
                        </div>

                    </section>

                </header>
            </div>
        </div>
    </div>


    <div class="checkout-container">
        <div class="checkout-left-column">
            <!-- Address Section -->
            <div class="checkout-section">
                <h2 class="checkout-section-title">Delivery Address</h2>
                <div class="checkout-address-list">
                    <% if (address.length> 0) { %>
                        <form id="order-selection-form" onsubmit="CheckoutForm('<%= totalAmount %>',event)">
                            <input type="hidden" name="cartId" value="<%= cart[0].id %>">
                            <% address.forEach((element, index)=> { %>
                                <div class="checkout-address-card">
                                    <input type="radio" name="selectedAddress" id="address-<%= index %>"
                                        value="<%= element.id %>" <% if (index===0) { %> checked <% } %>

                                        />
                                        <label for="address-<%= index %>">
                                            <h5>
                                                <%= element.addressName %>
                                            </h5>
                                            <p>
                                                <%= user.username %>
                                            </p>
                                            <p>
                                                <%= element.city %>, <%= element.state %>, <%= element.zipCode %>
                                            </p>
                                            <p>Phone: <%= element.phoneNumber %>
                                            </p>
                                        </label>
                                </div>
                                <% }) %>

                                    <% } else { %>
                                        <p>No addresses found. Please add a new address.</p>
                                        <% } %>

                                            <div class="checkout-add-address-btn" data-bs-toggle="modal"
                                                data-bs-target="#addAddressModal" data-bs-whatever="@mdo">
                                                + Add New Address
                                            </div>
                </div>
            </div>



            <!-- Order Summary Section -->
            <div class="checkout-section">
                <h2 class="checkout-section-title">Order Summary</h2>
                <% if (cart[0] && cart[0].items.length> 0) { %>
                    <% cart[0].items.forEach((item,i)=> { %>
                        <div class="checkout-product-card">
                            <img src="/uploads/<%= item.product.productImage[0] %>" alt="Product"
                                class="checkout-product-image">
                            <div class="checkout-product-details">
                                <h3>
                                    <%= item.product.category.name %>
                                </h3>
                                <p class="checkout-product-category">
                                    <%= item.product.productName %>
                                </p>
                                <div class="checkout-quantity-selector">
                                    <button disabled class="checkout-quantity-btn">-</button>
                                    <span>
                                        <%= item.quantity %>
                                    </span>
                                    <button disabled class="checkout-quantity-btn">+</button>
                                </div>

                            </div>
                            <div class="checkout-product-price<%=i%>">


                                <% const offerPrice=(()=> {
                                    const productOffer = typeof item.product.productOffer === "number" &&
                                    !isNaN(item.product.productOffer) ? item.product.productOffer : 0;
                                    const categoryOffer = typeof item.product.categoryofferprice === "number" &&
                                    !isNaN(item.product.categoryofferprice) ? item.product.categoryofferprice : 0;


                                    if (productOffer > 0 && categoryOffer > 0) {
                                    return Math.min(productOffer, categoryOffer);
                                    } else if (productOffer > 0) {
                                    return productOffer;
                                    } else if (categoryOffer > 0) {
                                    return categoryOffer;
                                    } else {
                                    return 0;
                                    }
                                    })();

                                    if (offerPrice > 0) {
                                    %>

                                    <p class="regularPrice<%=i%>" value="<%= offerPrice * item.quantity %>">₹<%=
                                            offerPrice * item.quantity %>
                                    </p>

                                    <% } else { %>

                                        <p class="regularPrice<%=i%>">₹<%= item.product.regularPrice * item.quantity %>
                                        </p>

                                        <% } %>

                                            <p id="offerPrice<%= i %>"></p>
                            </div>
                        </div>

                        <% }) %>
                            <% } else { %>
                                <p>Your cart is empty. Please add some items to your cart.</p>
                                <% } %>

            </div>
        </div>

        <div class="checkout-right-column">
            <!-- Coupon Section -->


            <div class="checkout-section coupon-section">
                <h2 class="checkout-section-title">Apply Coupon</h2>

                <select class="checkout-coupon-dropdown" onchange="handleCouponChange(this)">

                    <option value="">Select a coupon</option>

                    <% coupon.forEach(element=> { %>
                        <option value="<%= element._id %>" data-minimum="<%= element.minimum_purchase_amount %>"
                            data-maximum="<%= element.maximum_coupon_amount %>">
                            <%= element.coupon_code %> - <%= element.discount %> % off
                        </option>

                        <% }) %>

                </select>


                <p id="coupons"></p>
                <div class="checkout-save-coupon-btn" onclick="applyCoupon('<%= totalAmount %>')">Apply Coupon</div>

            </div>


            <!-- Payment Section -->
            <div class="checkout-section">
                <h2 class="checkout-section-title">Payment Method</h2>
                <div class="checkout-payment-option">
                    <input type="radio" name="payment" id="checkout-cod" value="Cash on Delivery">
                    <label for="cod">Cash on Delivery</label>
                </div>
                <div class="checkout-payment-option">
                    <input type="radio" name="payment" id="checkout-online" value="Razorpay">
                    <label for="online">Online Payment Razorpay</label>
                </div>
                <div class="checkout-payment-option">
                    <input type="radio" name="payment" id="checkout-wallet" value="Wallet">
                    <label for="wallet">Wallet</label>
                </div>
            </div>

            <!-- Order Total Section -->
            <div class="checkout-section">
                <h2 class="checkout-section-title">Order Total</h2>
                <div class="checkout-order-summary">
                    <div class="checkout-summary-row">
                        <span>Subtotal</span>
                        <span id="Subtotal">₹<%= totalAmount %></span>
                    </div>
                    <div class="checkout-summary-row">
                        <span>Delivery Charge</span>
                        <span>₹40.00</span>
                    </div>
                    <div class="checkout-summary-row">
                        <span>Coupon</span>
                        <span id="coupon">₹0.00</span>
                    </div>
                    <div class="checkout-summary-row total-row">
                        <span>Total</span>
                        <span id="total">₹<%= totalAmount + 40 %></span>
                    </div>
                </div>
                <button type="submit" class="checkout-place-order-btn">Place
                    Order</button>
            </div>
        </div>
    </div>

    </form>

    <div class="container-fluid">
        <div class="row">
            <div class="col-12 col-lg-12 col-sm-12 col-md-12 col-xl-12 col-xxl-12">
                <section id="newsletter" class="section-p1 section-m1">
                    <div class="newstext">
                        <h4>Sign Up For Newsletters</h4>
                        <p>Get E-mail updates about our latest shop and <span>special offers.</span> </p>
                    </div>
                    <div class="form">
                        <input type="text" placeholder="Your email address">
                        <button class="normal">Sign Up</button>
                    </div>
                </section>

            </div>

        </div>

    </div>




    <div class="container-fluid">

        <div class="row">

            <div class="col-12 col-lg-12 col-sm-12 col-md-12 col-xl-12 col-xxl-12">


                <footer class="section-p1">
                    <div class="col">
                        <img class="logo" src="./img/logo.png" alt="">
                        <h4>Contact</h4>
                        <p><strong>Address:</strong> 562 Wellington Road, Street 32, San Francisco</p>
                        <p><strong>Phone:</strong> +01 2222 345 / (+91) 0 123 456 789</p>
                        <p><strong>Hours:</strong> 10:00 - 18:00, Mon - Sat</p>
                        <div class="follow">
                            <h4>Follow us</h4>
                            <div class="icon">
                                <i class='bx bxl-facebook'></i>
                                <i class='bx bxl-twitter'></i>
                                <i class='bx bxl-instagram'></i>
                                <i class='bx bxl-pinterest-alt'></i>
                                <i class='bx bxl-youtube'></i>
                            </div>
                        </div>
                    </div>

                    <div class="col">
                        <h4>About</h4>
                        <a href="#">About us</a>
                        <a href="#">Devlivery Information</a>
                        <a href="#">Privacy Policy</a>
                        <a href="#">Terms & Conditions</a>
                        <a href="#">Contact Us</a>
                    </div>

                    <div class="col">
                        <h4>My Account</h4>
                        <a href="#">Sign In</a>
                        <a href="#">View Cart</a>
                        <a href="#">My Wishlist</a>
                        <a href="#">Track My Order</a>
                        <a href="#">Help</a>
                    </div>

                    <div class="col install">
                        <h4>Install App</h4>
                        <p>From App Store or Google Play</p>
                        <div class="row">
                            <img src="./img/pay/app.jpg" alt="">
                            <img src="./img/pay/play.jpg" alt="">
                        </div>
                        <p>Secured Payment Gateways</p>
                        <img src="./img/pay/pay.png" alt="">
                    </div>

                    <div class="copyright">
                        <p>© 2023, Sahad cmd - HTML CSS Ecommerce Template</p>
                    </div>
                </footer>
            </div>

        </div>

    </div>


    <!-- ADD MODAL HERE -->

    <div class="modal fade" id="addAddressModal" tabindex="-1" aria-labelledby="addAddressLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="addAddressLabel">Add New Address</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="addAddressForm" action='/add-address?checkout=true' method="post">
                        <div class="mb-3">
                            <label for="add-address-name" class="col-form-label">Address Name</label>
                            <p id="add-address-error" class="error-message"></p>
                            <input type="text" class="form-control" id="add-address-name" placeholder="e.g., Home, Work"
                                name="addressName">
                        </div>
                        <div class="mb-3">
                            <label for="add-phone-number" class="col-form-label">Phone Number</label>
                            <p id="add-phone-error" class="error-message"></p>
                            <input type="number" class="form-control" id="add-phone-number"
                                placeholder="Enter your phone number" name="phoneNumber">
                        </div>
                        <div class="mb-3">
                            <label for="add-street-address" class="col-form-label">Street Address</label>
                            <p id="add-street-error" class="error-message"></p>
                            <input type="text" class="form-control" id="add-street-address"
                                placeholder="Street address or P.O. box" name="streetAddress">
                        </div>
                        <div class="mb-3">
                            <label for="add-city-name" class="col-form-label">City</label>
                            <p id="add-city-error" class="error-message"></p>
                            <input type="text" class="form-control" id="add-city-name" placeholder="City" name="city">
                        </div>
                        <div class="mb-3">
                            <label for="add-state-name" class="col-form-label">State</label>
                            <p id="add-state-error" class="error-message"></p>
                            <input type="text" class="form-control" id="add-state-name" placeholder="State"
                                name="state">
                        </div>
                        <div class="mb-3">
                            <label for="add-zip-code" class="col-form-label">Zip Code</label>
                            <p id="add-zip-error" class="error-message"></p>
                            <input type="number" class="form-control" id="add-zip-code" placeholder="ZIP Code"
                                name="zipCode">
                        </div>
                        <div class="mb-3">
                            <label for="add-country-name" class="col-form-label">Country</label>
                            <p id="add-country-error" class="error-message"></p>
                            <input type="text" class="form-control" id="add-country-name" placeholder="Country"
                                name="country">
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" onclick="validateForm('add')">Save Address</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
        crossorigin="anonymous"></script>

    <!-- sweetalert -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>

    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>

    <script>


        let maximmum = 0;

        let minimmum = 0;



        function handleCouponChange(selectElement) {

            console.log("this is the element", selectElement);

            const selectedOption = selectElement.options[selectElement.selectedIndex];

            console.log("Selecttteddd", selectedOption);

            const minimum = parseFloat(selectedOption.getAttribute('data-minimum'));
            const maximum = parseFloat(selectedOption.getAttribute('data-maximum'));

            maximmum = maximum;

            minimmum = minimum;

        }



        function applyCoupon(totalAmount) {
            console.log("Coupon applied");


            console.log("maximmum amount", maximmum);

            console.log("minimmum amount", minimmum);


            const couponId = document.querySelector(".checkout-coupon-dropdown")?.value;

            console.log("Coupon ID:", couponId);

            const cartId = document.querySelector('input[name="cartId"]').value;

            console.log("Cart ID:", cartId);

            if (totalAmount < minimmum || totalAmount > maximmum) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: `Minimum order amount is between the minimum ${minimmum} and maximum ${maximmum}`,
                })
                return;
            }



            fetch('/apply-coupon', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    couponId,
                    totalAmount,
                    cartId
                }),
            })
                .then((response) => response.json())
                .then((data) => {
                    if (data.success) {
                        console.log("Coupon applied successfully");

                        const couponstatus = document.getElementById('coupons')

                        couponstatus.innerHTML = `coupon applied successfully <i class='bx bx-x-circle' onclick="removeCoupon('${couponId}')" ></i>`;
                        couponstatus.classList.add("text-success");

                        const couponElement = document.getElementById("coupon");
                        if (couponElement) {
                            couponElement.textContent = `₹${data.discountAmount}`;
                            couponElement.classList.add("text-success");
                        } else {
                            console.error("Coupon element not found in the DOM.");
                        }

                        console.log("sceeneeeee", data.cart.items);


                        data.cart.items.forEach((element, index) => {


                            const offerPrice = document.getElementById(`offerPrice${index}`);

                            const regularPrice = document.querySelector(`.regularPrice${index}`);

                            const productoffer = regularPrice ? parseFloat(regularPrice.textContent.replace('₹', '').trim()) : 0;

                            console.log("Elementregularrrrrr:", productoffer);



                            console.log("Elementregularrrrrr:", regularPrice);

                            console.log("Elementofferrrrrr:", offerPrice);



                            const offerprice = (productoffer * data.discount) / 100



                            offerPrice.textContent = `Offer Price :₹${(productoffer - offerprice)}`;


                            offerPrice.classList.add("text-success");

                            regularPrice.style.textDecoration = "line-through";




                            const totalElement = document.getElementById("total");
                            if (totalElement) {

                                totalElement.textContent = `₹${(data.updatedTotalAmount || totalAmount) + 40}`;
                            } else {
                                console.error("Total element not found in the DOM.");
                            }

                        })

                    } else {

                        const couponstatus = document.getElementById('coupons')

                        couponstatus.textContent = "";

                        for (let index in data.cart.items) {

                            const offerPrice = document.getElementById(`offerPrice${index}`);

                            const regularPrice = document.querySelector(`.regularPrice${index}`);

                            if (offerPrice && regularPrice) {

                                offerPrice.textContent = "";
                                regularPrice.style.textDecoration = "none";

                            }

                        }

                        const couponMessageElement = document.getElementById("coupon");
                        if (couponMessageElement) {
                            couponMessageElement.textContent = data.message || "Coupon invalid";
                            couponMessageElement.classList.add("text-danger"); // Optional: add an error style


                            const totalElement = document.getElementById("total");

                            const totalPayableAmount = Number(totalAmount) + 40;

                            totalElement.textContent = `₹${totalPayableAmount}`;
                        }
                    }
                })
                .catch((err) => {
                    console.error("Error applying coupon:", err);
                });
        }




        function validateForm(type) {
            const prefix = type === 'add' ? 'add' : 'edit';

            let isValid = true;
            const addressName = document.getElementById(`${prefix}-address-name`).value.trim();
            const phoneNumber = document.getElementById(`${prefix}-phone-number`).value.trim();
            const streetAddress = document.getElementById(`${prefix}-street-address`).value.trim();
            const city = document.getElementById(`${prefix}-city-name`).value.trim();
            const state = document.getElementById(`${prefix}-state-name`).value.trim();
            const zipCode = document.getElementById(`${prefix}-zip-code`).value.trim();
            const country = document.getElementById(`${prefix}-country-name`).value.trim();

            const addressError = document.getElementById(`${prefix}-address-error`);
            const phoneError = document.getElementById(`${prefix}-phone-error`);
            const streetError = document.getElementById(`${prefix}-street-error`);
            const cityError = document.getElementById(`${prefix}-city-error`);
            const stateError = document.getElementById(`${prefix}-state-error`);
            const zipError = document.getElementById(`${prefix}-zip-error`);
            const countryError = document.getElementById(`${prefix}-country-error`);

            const addressRegex = /^[A-Za-z0-9\s,.-]+$/;
            const phoneRegex = /^[0-9]{10,15}$/;
            const cityRegex = /^[A-Za-z\s]+$/;
            const stateRegex = /^[A-Za-z\s]+$/;
            const zipRegex = /^[0-9]{4,10}$/;
            const countryRegex = /^[A-Za-z\s]+$/;



            clearErrors();

            if (!addressName || !addressRegex.test(addressName)) {
                showError(addressError, 'Invalid Address Name');
                isValid = false;
            }
            if (!phoneNumber || !phoneRegex.test(phoneNumber)) {
                showError(phoneError, 'Invalid Phone Number');
                isValid = false;
            }
            if (!streetAddress || !addressRegex.test(streetAddress)) {
                showError(streetError, 'Invalid Street Address');
                isValid = false;
            }
            if (!city || !cityRegex.test(city)) {
                showError(cityError, 'Invalid City Name');
                isValid = false;
            }
            if (!state || !stateRegex.test(state)) {
                showError(stateError, 'Invalid State Name');
                isValid = false;
            }
            if (!zipCode || !zipRegex.test(zipCode)) {
                showError(zipError, 'Invalid Zip Code');
                isValid = false;
            }
            if (!country || !countryRegex.test(country)) {
                showError(countryError, 'Invalid Country Name');
                isValid = false;
            }

            if (isValid) {
                const form = document.getElementById(`${type}AddressForm`);
                form.submit();
            }
        }

        function showError(element, message) {
            element.innerText = message;
            element.style.color = 'red';
            element.style.display = 'block';
        }

        function clearErrors() {
            document.querySelectorAll('.error-message').forEach(error => {
                error.innerText = '';
                error.style.display = 'none';
            });
        }


        async function CheckoutForm(totalAmount, event) {
            event.preventDefault(); // Prevent default form submission

            const cartId = document.querySelector('input[name="cartId"]').value;
            const selectedAddress = document.querySelector('input[name="selectedAddress"]:checked').value;
            const paymentMethod = document.querySelector('input[name="payment"]:checked').value;

            const totalPayableElement = document.getElementById('total');

            const SubtotalElement = document.getElementById('Subtotal');

            console.log("this is the selected address", selectedAddress);

            console.log("this is the payment method", paymentMethod);



            // SUBTOTAL

            const Subtotal = SubtotalElement ? parseFloat(SubtotalElement.textContent.replace('₹', '')) : 0;

            console.log("this is our subtotal", Subtotal);


            // TOTAL PAYABLE AMOUNT

            const totalPayable = totalPayableElement ? parseFloat(totalPayableElement.textContent.replace('₹', '').trim()) : 0;

            const coupon = document.getElementById('coupon')

            // Coupon Amount

            const couponAmount = coupon ? parseFloat(coupon.textContent.replace('₹', '').trim()) : 0;

            // Coupon ID 

            const couponId = document.querySelector(".checkout-coupon-dropdown")?.value;

            const CouponID = couponId ? couponId : '';

            console.log("this is our coupon id", CouponID);

            console.log("totalpayable Amount", totalPayable);

            if (!selectedAddress) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Missing Address',
                    text: 'Please select an address before placing the order.',
                    showConfirmButton: true,
                });
                return;
            }

            if (!paymentMethod) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Missing Payment Method',
                    text: 'Please select a payment method.',
                    showConfirmButton: true,
                });
                return;
            }

            const formData = {
                PayableAmount: totalPayable,
                SubtotalAmount: Subtotal,
                selectedAddress: selectedAddress,
                paymentMethod: paymentMethod,
                couponAmount: couponAmount,
                cartId: cartId,
                couponId: CouponID
            }

            if (paymentMethod === "Cash on Delivery" || paymentMethod === "Wallet") {

                $.ajax({
                    url: '/place-order',
                    type: 'POST',
                    data: {
                        PayableAmount: totalPayable,
                        SubtotalAmount: Subtotal,
                        selectedAddress: selectedAddress,
                        paymentMethod: paymentMethod,
                        couponAmount: couponAmount,
                        cartId: cartId,
                        couponId: CouponID
                    },

                    success: function (response) {
                        if (response.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Success',
                                text: response.message,
                                showConfirmButton: true,
                                timer: 1500
                            }).then(() => {
                                window.location.href = response.redirectUrl;
                            });
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: response.message || 'Something went wrong. Please try again.',
                                showConfirmButton: false,
                                timer: 1500
                            });
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error('AJAX Error:', xhr.responseText || error);
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: xhr.responseJSON?.message || 'An unexpected error occurred.',
                            showConfirmButton: false,
                            timer: 1500
                        });
                    }
                });

            } else if (paymentMethod === "Razorpay") {

                console.log("Razorpay payment method selected");


                try {

                    const response = await fetch('/create_razorpay_oder', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(formData)
                    });

                    console.log("this is our response", response);


                    const result = await response.json();


                    if (result.success) {
                        const options = {
                            key: 'rzp_test_ZPlMwH8hdwliYC',
                            amount: result.payableAmount * 100,
                            currency: 'INR',
                            name: 'Tokyo Cars',
                            description: 'Test Payment',
                            order_id: result.razorpayOrderId,
                            handler: async function (paymentResponse) {

                                try {

                                    const response = await fetch('/veryfy_razorpay_payment', {
                                        method: 'POST',
                                        headers: {
                                            'Content-Type': 'application/json'
                                        },
                                        body: JSON.stringify({
                                            paymentResponse,
                                            formData
                                        })
                                    })

                                    const result = await response.json();

                                    console.log("This is the resultttttttttt ", result);


                                    if (result.success) {
                                        Swal.fire({
                                            icon: 'success',
                                            title: 'Success',
                                            text: result.message,
                                            showConfirmButton: true,
                                            timer: 1500
                                        }).then(() => {
                                            window.location.href = result.redirectUrl;
                                        });
                                    } else {

                                        Swal.fire({
                                            icon: 'error',
                                            title: 'Payment Failed',
                                            text: result.message || 'Payment verification failed. Please try again.',
                                            showConfirmButton: true,
                                            timer: 1500
                                        });
                                    }

                                } catch (error) {

                                    console.error('Error verifying payment:', error);
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Error',
                                        text: 'An unexpected error occurred while verifying the payment.',
                                        showConfirmButton: true,
                                        timer: 1500
                                    });

                                }

                            },

                            prefill: {
                                name: 'Tokyo Cars',
                                email: 'tokyo@gmail.com',
                                contact: '91212234567',
                            },

                            notes: {
                                address: 'Tokyo, Japan'
                            },

                            theme: {
                                color: '#007bff',
                            },

                            modal: {
                                ondismiss:  async function () {
                                    
                                    const responses = await fetch('/veryfy_razorpay_payment', {
                                        method: 'POST',
                                        headers: {
                                            'Content-Type': 'application/json'
                                        },
                                        body: JSON.stringify({
                                            formData,
                                            failed: true
                                        })
                                    })

                                    const failure = await responses.json();

                                    if(failure.success == false){
                                        Swal.fire({
                                            icon: 'error',
                                            title: 'Payment Failed',
                                            text: failure.message || 'Payment verification failed. Please try again.',
                                            showConfirmButton: true,
                                            timer: 1500
                                        }).then(()=>{
                                            window.location.href = '/order';
                                        })
                                    }
                                    
                                }
                            }
                        };

                        console.log("Final Razorpay options:", options);

                        const razorpay = new Razorpay(options);
                        razorpay.open();
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: result.message||  'Order Creation Failed',
                            text:  result.text|| 'Failed to create the Razorpay order. Please try again.',
                            showConfirmButton: false,
                            timer: 1500
                        });
                    }

                } catch (error) {
                    console.error('Error:', error);
                    alert('An error occurred while processing your payment.');
                }
            }

        }




        function removeCoupon(id) {
            console.log("this is our coupon id", id);

            Swal.fire({
                title: 'Are you sure?',
                text: "Do you really want to remove this coupon!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, remove it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    console.log("Coupon removed successfully.");
                    window.location.reload();
                }
            });
        }

    </script>
</body>

</html>